!function () { function t(t) { return document.createElementNS(d, t) } function e(t) { return (10 > t ? "0" : "") + t } function i(i, n) { function r(t, e) { var i = p.offset(), s = /^touch/.test(t.type), r = i.left + k, o = i.top + k, h = (s ? t.originalEvent.touches[0] : t).pageX - r, l = (s ? t.originalEvent.touches[0] : t).pageY - o, d = Math.sqrt(h * h + l * l), f = !1; if (!e || !(w - C > d || d > w + C)) { t.preventDefault(); var m = setTimeout(function () { a.addClass("clockpicker-moving") }, 200); u && p.append(U.canvas), U.setHand(h, l, !e, !0), c.off(g).on(g, function (t) { t.preventDefault(); var e = /^touch/.test(t.type), i = (e ? t.originalEvent.touches[0] : t).pageX - r, s = (e ? t.originalEvent.touches[0] : t).pageY - o; (f || i !== h || s !== l) && (f = !0, U.setHand(i, s, !1, !0)) }), c.off(v).on(v, function (t) { c.off(v), t.preventDefault(); var i = /^touch/.test(t.type), s = (i ? t.originalEvent.changedTouches[0] : t).pageX - r, d = (i ? t.originalEvent.changedTouches[0] : t).pageY - o; (e || f) && s === h && d === l && U.setHand(s, d), "hours" === U.currentView ? U.toggleView("minutes", M / 2) : n.autoclose && (U.minutesView.addClass("clockpicker-dial-out"), setTimeout(function () { U.done() }, M / 2)), p.prepend(R), clearTimeout(m), a.removeClass("clockpicker-moving"), c.off(g) }) } } var o, l, d = h(_), p = d.find(".clockpicker-plate"), f = d.find(".clockpicker-hours"), y = d.find(".clockpicker-minutes"), x = d.find(".clockpicker-am-pm-block"), A = "INPUT" === i.prop("tagName"), S = A ? i : i.find("input"), V = i.find(".input-group-addon"), U = this; if (this.id = (l = ++b + "", (o = "cp") ? o + l : l), this.element = i, this.options = n, this.isAppended = !1, this.isShown = !1, this.currentView = "hours", this.isInput = A, this.input = S, this.addon = V, this.popover = d, this.plate = p, this.hoursView = f, this.minutesView = y, this.amPmBlock = x, this.spanHours = d.find(".clockpicker-span-hours"), this.spanMinutes = d.find(".clockpicker-span-minutes"), this.spanAmPm = d.find(".clockpicker-span-am-pm"), this.amOrPm = "PM", n.twelvehour) { var F = ['<div class="clockpicker-am-pm-block">', '<button type="button" class="btn btn-sm btn-default clockpicker-button clockpicker-am-button">', "AM</button>", '<button type="button" class="btn btn-sm btn-default clockpicker-button clockpicker-pm-button">', "PM</button>", "</div>"].join(""); h(F), h('<button type="button" class="btn btn-sm btn-default clockpicker-button am-button">AM</button>').on("click", function () { U.amOrPm = "AM", h(".clockpicker-span-am-pm").empty().append("AM") }).appendTo(this.amPmBlock), h('<button type="button" class="btn btn-sm btn-default clockpicker-button pm-button">PM</button>').on("click", function () { U.amOrPm = "PM", h(".clockpicker-span-am-pm").empty().append("PM") }).appendTo(this.amPmBlock) } n.autoclose || h('<button type="button" class="btn btn-sm btn-default btn-block clockpicker-button">' + n.donetext + "</button>").click(h.proxy(this.done, this)).appendTo(d), "top" !== n.placement && "bottom" !== n.placement || "top" !== n.align && "bottom" !== n.align || (n.align = "left"), "left" !== n.placement && "right" !== n.placement || "left" !== n.align && "right" !== n.align || (n.align = "top"), d.addClass(n.placement), d.addClass("clockpicker-align-" + n.align), this.spanHours.click(h.proxy(this.toggleView, this, "hours")), this.spanMinutes.click(h.proxy(this.toggleView, this, "minutes")), S.on("focus.clockpicker click.clockpicker", h.proxy(this.show, this)), V.on("click.clockpicker", h.proxy(this.toggle, this)); var E, N, O, z, I = h('<div class="clockpicker-tick"></div>'); if (n.twelvehour) for (E = 1; 13 > E; E += 1)N = I.clone(), O = E / 6 * Math.PI, z = w, N.css("font-size", "120%"), N.css({ left: k + Math.sin(O) * z - C, top: k - Math.cos(O) * z - C }), N.html(0 === E ? "00" : E), f.append(N), N.on(m, r); else for (E = 0; 24 > E; E += 1) { N = I.clone(), O = E / 6 * Math.PI; var q = E > 0 && 13 > E; z = q ? D : w, N.css({ left: k + Math.sin(O) * z - C, top: k - Math.cos(O) * z - C }), q && N.css("font-size", "120%"), N.html(0 === E ? "00" : E), f.append(N), N.on(m, r) } for (E = 0; 60 > E; E += 5)N = I.clone(), O = E / 30 * Math.PI, N.css({ left: k + Math.sin(O) * w - C, top: k - Math.cos(O) * w - C }), N.css("font-size", "120%"), N.html(e(E)), y.append(N), N.on(m, r); if (p.on(m, function (t) { 0 === h(t.target).closest(".clockpicker-tick").length && r(t, !0) }), u) { var R = d.find(".clockpicker-canvas"), L = t("svg"); L.setAttribute("class", "clockpicker-svg"), L.setAttribute("width", T), L.setAttribute("height", T); var H = t("g"); H.setAttribute("transform", "translate(" + k + "," + k + ")"); var P = t("circle"); P.setAttribute("class", "clockpicker-canvas-bearing"), P.setAttribute("cx", 0), P.setAttribute("cy", 0), P.setAttribute("r", 2); var Y = t("line"); Y.setAttribute("x1", 0), Y.setAttribute("y1", 0); var W = t("circle"); W.setAttribute("class", "clockpicker-canvas-bg"), W.setAttribute("r", C); var j = t("circle"); j.setAttribute("class", "clockpicker-canvas-fg"), j.setAttribute("r", 3.5), H.appendChild(Y), H.appendChild(W), H.appendChild(j), H.appendChild(P), L.appendChild(H), R.append(L), this.hand = Y, this.bg = W, this.fg = j, this.bearing = P, this.g = H, this.canvas = R } s(this.options.init) } function s(t) { t && "function" == typeof t && t() } var a, n, r, o, h = window.jQuery, l = h(window), c = h(document), d = "http://www.w3.org/2000/svg", u = "SVGAngle" in window && ((o = document.createElement("div")).innerHTML = "<svg/>", r = (o.firstChild && o.firstChild.namespaceURI) == d, o.innerHTML = "", r), p = "transition" in (n = document.createElement("div").style) || "WebkitTransition" in n || "MozTransition" in n || "msTransition" in n || "OTransition" in n, f = "ontouchstart" in window, m = "mousedown" + (f ? " touchstart" : ""), g = "mousemove.clockpicker" + (f ? " touchmove.clockpicker" : ""), v = "mouseup.clockpicker" + (f ? " touchend.clockpicker" : ""), y = navigator.vibrate ? "vibrate" : navigator.webkitVibrate ? "webkitVibrate" : null, b = 0, k = 100, w = 80, D = 54, C = 13, T = 2 * k, M = p ? 350 : 1, _ = ['<div class="popover clockpicker-popover">', '<div class="arrow"></div>', '<div class="popover-title">', '<span class="clockpicker-span-hours text-primary"></span>', " : ", '<span class="clockpicker-span-minutes"></span>', '<span class="clockpicker-span-am-pm"></span>', "</div>", '<div class="popover-content">', '<div class="clockpicker-plate">', '<div class="clockpicker-canvas"></div>', '<div class="clockpicker-dial clockpicker-hours"></div>', '<div class="clockpicker-dial clockpicker-minutes clockpicker-dial-out"></div>', "</div>", '<span class="clockpicker-am-pm-block">', "</span>", "</div>", "</div>"].join(""); i.DEFAULTS = { default: "", fromnow: 0, placement: "bottom", align: "left", donetext: "完成", autoclose: !1, twelvehour: !1, vibrate: !0 }, i.prototype.toggle = function () { this[this.isShown ? "hide" : "show"]() }, i.prototype.locate = function () { var t = this.element, e = this.popover, i = t.offset(), s = t.outerWidth(), a = t.outerHeight(), n = this.options.placement, r = this.options.align, o = {}; switch (e.show(), n) { case "bottom": o.top = i.top + a; break; case "right": o.left = i.left + s; break; case "top": o.top = i.top - e.outerHeight(); break; case "left": o.left = i.left - e.outerWidth() }switch (r) { case "left": o.left = i.left; break; case "right": o.left = i.left + s - e.outerWidth(); break; case "top": o.top = i.top; break; case "bottom": o.top = i.top + a - e.outerHeight() }e.css(o) }, i.prototype.show = function () { if (!this.isShown) { s(this.options.beforeShow); var t = this; this.isAppended || (a = h(document.body).append(this.popover), l.on("resize.clockpicker" + this.id, function () { t.isShown && t.locate() }), this.isAppended = !0); var i = ((this.input.prop("value") || this.options.default || "") + "").split(":"); if ("now" === i[0]) { var n = new Date(+new Date + this.options.fromnow); i = [n.getHours(), n.getMinutes()] } this.hours = +i[0] || 0, this.minutes = +i[1] || 0, this.spanHours.html(e(this.hours)), this.spanMinutes.html(e(this.minutes)), this.toggleView("hours"), this.locate(), this.isShown = !0, c.on("click.clockpicker." + this.id + " focusin.clockpicker." + this.id, function (e) { var i = h(e.target); 0 === i.closest(t.popover).length && 0 === i.closest(t.addon).length && 0 === i.closest(t.input).length && t.hide() }), c.on("keyup.clockpicker." + this.id, function (e) { 27 === e.keyCode && t.hide() }), s(this.options.afterShow) } }, i.prototype.hide = function () { s(this.options.beforeHide), this.isShown = !1, c.off("click.clockpicker." + this.id + " focusin.clockpicker." + this.id), c.off("keyup.clockpicker." + this.id), this.popover.hide(), s(this.options.afterHide) }, i.prototype.toggleView = function (t, e) { var i = !1; "minutes" === t && "visible" === h(this.hoursView).css("visibility") && (s(this.options.beforeHourSelect), i = !0); var a = "hours" === t, n = a ? this.hoursView : this.minutesView, r = a ? this.minutesView : this.hoursView; this.currentView = t, this.spanHours.toggleClass("text-primary", a), this.spanMinutes.toggleClass("text-primary", !a), r.addClass("clockpicker-dial-out"), n.css("visibility", "visible").removeClass("clockpicker-dial-out"), this.resetClock(e), clearTimeout(this.toggleViewTimer), this.toggleViewTimer = setTimeout(function () { r.css("visibility", "hidden") }, M), i && s(this.options.afterHourSelect) }, i.prototype.resetClock = function (t) { var e = this.currentView, i = this[e], s = "hours" === e, a = i * (Math.PI / (s ? 6 : 30)), n = s && i > 0 && 13 > i ? D : w, r = Math.sin(a) * n, o = -Math.cos(a) * n, h = this; u && t ? (h.canvas.addClass("clockpicker-canvas-out"), setTimeout(function () { h.canvas.removeClass("clockpicker-canvas-out"), h.setHand(r, o) }, t)) : this.setHand(r, o) }, i.prototype.setHand = function (t, i, s, a) { var n, r = Math.atan2(t, -i), o = "hours" === this.currentView, l = Math.PI / (o || s ? 6 : 30), c = Math.sqrt(t * t + i * i), d = this.options, p = o && (w + D) / 2 > c, f = p ? D : w; if (d.twelvehour && (f = w), 0 > r && (r = 2 * Math.PI + r), r = (n = Math.round(r / l)) * l, d.twelvehour ? o ? 0 === n && (n = 12) : (s && (n *= 5), 60 === n && (n = 0)) : o ? (12 === n && (n = 0), n = p ? 0 === n ? 12 : n : 0 === n ? 0 : n + 12) : (s && (n *= 5), 60 === n && (n = 0)), this[this.currentView] !== n && y && this.options.vibrate && (this.vibrateTimer || (navigator[y](10), this.vibrateTimer = setTimeout(h.proxy(function () { this.vibrateTimer = null }, this), 100))), this[this.currentView] = n, this[o ? "spanHours" : "spanMinutes"].html(e(n)), u) { a || !o && n % 5 ? (this.g.insertBefore(this.hand, this.bearing), this.g.insertBefore(this.bg, this.fg), this.bg.setAttribute("class", "clockpicker-canvas-bg clockpicker-canvas-bg-trans")) : (this.g.insertBefore(this.hand, this.bg), this.g.insertBefore(this.fg, this.bg), this.bg.setAttribute("class", "clockpicker-canvas-bg")); var m = Math.sin(r) * f, g = -Math.cos(r) * f; this.hand.setAttribute("x2", m), this.hand.setAttribute("y2", g), this.bg.setAttribute("cx", m), this.bg.setAttribute("cy", g), this.fg.setAttribute("cx", m), this.fg.setAttribute("cy", g) } else this[o ? "hoursView" : "minutesView"].find(".clockpicker-tick").each(function () { var t = h(this); t.toggleClass("active", n === +t.html()) }) }, i.prototype.done = function () { s(this.options.beforeDone), this.hide(); var t = this.input.prop("value"), i = e(this.hours) + ":" + e(this.minutes); this.options.twelvehour && (i += this.amOrPm), this.input.prop("value", i), i !== t && (this.input.triggerHandler("change"), this.isInput || this.element.trigger("change")), this.options.autoclose && this.input.trigger("blur"), s(this.options.afterDone) }, i.prototype.remove = function () { this.element.removeData("clockpicker"), this.input.off("focus.clockpicker click.clockpicker"), this.addon.off("click.clockpicker"), this.isShown && this.hide(), this.isAppended && (l.off("resize.clockpicker" + this.id), this.popover.remove()) }, h.fn.clockpicker = function (t) { var e = Array.prototype.slice.call(arguments, 1); return this.each(function () { var s = h(this), a = s.data("clockpicker"); if (a) "function" == typeof a[t] && a[t].apply(a, e); else { var n = h.extend({}, i.DEFAULTS, s.data(), "object" == typeof t && t); s.data("clockpicker", new i(s, n)) } }) } }(), function (t) { "function" == typeof define && define.amd ? define(["jquery"], t) : t("object" == typeof exports ? require("jquery") : jQuery) }(function (t, e) { function i() { return new Date(Date.UTC.apply(Date, arguments)) } function s() { var t = new Date; return i(t.getFullYear(), t.getMonth(), t.getDate()) } function a(t, e) { return t.getUTCFullYear() === e.getUTCFullYear() && t.getUTCMonth() === e.getUTCMonth() && t.getUTCDate() === e.getUTCDate() } function n(t) { return function () { return this[t].apply(this, arguments) } } var r, o = (r = { get: function (t) { return this.slice(t)[0] }, contains: function (t) { for (var e = t && t.valueOf(), i = 0, s = this.length; s > i; i++)if (0 <= this[i].valueOf() - e && this[i].valueOf() - e < 864e5) return i; return -1 }, remove: function (t) { this.splice(t, 1) }, replace: function (e) { e && (t.isArray(e) || (e = [e]), this.clear(), this.push.apply(this, e)) }, clear: function () { this.length = 0 }, copy: function () { var t = new o; return t.replace(this), t } }, function () { var e = []; return e.push.apply(e, arguments), t.extend(e, r), e }), h = function (e, i) { t.data(e, "datepicker", this), this._process_options(i), this.dates = new o, this.viewDate = this.o.defaultViewDate, this.focusDate = null, this.element = t(e), this.isInput = this.element.is("input"), this.inputField = this.isInput ? this.element : this.element.find("input"), this.component = !!this.element.hasClass("date") && this.element.find(".add-on, .input-group-addon, .btn"), this.component && 0 === this.component.length && (this.component = !1), this.isInline = !this.component && this.element.is("div"), this.picker = t(m.template), this._check_template(this.o.templates.leftArrow) && this.picker.find(".prev").html(this.o.templates.leftArrow), this._check_template(this.o.templates.rightArrow) && this.picker.find(".next").html(this.o.templates.rightArrow), this._buildEvents(), this._attachEvents(), this.isInline ? this.picker.addClass("datepicker-inline").appendTo(this.element) : this.picker.addClass("datepicker-dropdown dropdown-menu"), this.o.rtl && this.picker.addClass("datepicker-rtl"), this.o.calendarWeeks && this.picker.find(".datepicker-days .datepicker-switch, thead .datepicker-title, tfoot .today, tfoot .clear").attr("colspan", function (t, e) { return Number(e) + 1 }), this._allow_update = !1, this.setStartDate(this._o.startDate), this.setEndDate(this._o.endDate), this.setDaysOfWeekDisabled(this.o.daysOfWeekDisabled), this.setDaysOfWeekHighlighted(this.o.daysOfWeekHighlighted), this.setDatesDisabled(this.o.datesDisabled), this.setViewMode(this.o.startView), this.fillDow(), this.fillMonths(), this._allow_update = !0, this.update(), this.isInline && this.show() }; h.prototype = { constructor: h, _resolveViewName: function (e) { return t.each(m.viewModes, function (i, s) { return e === i || -1 !== t.inArray(e, s.names) ? (e = i, !1) : void 0 }), e }, _resolveDaysOfWeek: function (e) { return t.isArray(e) || (e = e.split(/[,\s]*/)), t.map(e, Number) }, _check_template: function (i) { try { return i !== e && "" !== i && ((i.match(/[<>]/g) || []).length <= 0 || t(i).length > 0) } catch (t) { return !1 } }, _process_options: function (e) { this._o = t.extend({}, this._o, e); var a = this.o = t.extend({}, this._o), n = a.language; f[n] || (n = n.split("-")[0], f[n] || (n = u.language)), a.language = n, a.startView = this._resolveViewName(a.startView), a.minViewMode = this._resolveViewName(a.minViewMode), a.maxViewMode = this._resolveViewName(a.maxViewMode), a.startView = Math.max(this.o.minViewMode, Math.min(this.o.maxViewMode, a.startView)), !0 !== a.multidate && (a.multidate = Number(a.multidate) || !1, !1 !== a.multidate && (a.multidate = Math.max(0, a.multidate))), a.multidateSeparator = String(a.multidateSeparator), a.weekStart %= 7, a.weekEnd = (a.weekStart + 6) % 7; var r = m.parseFormat(a.format); a.startDate !== -1 / 0 && (a.startDate ? a.startDate instanceof Date ? a.startDate = this._local_to_utc(this._zero_time(a.startDate)) : a.startDate = m.parseDate(a.startDate, r, a.language, a.assumeNearbyYear) : a.startDate = -1 / 0), a.endDate !== 1 / 0 && (a.endDate ? a.endDate instanceof Date ? a.endDate = this._local_to_utc(this._zero_time(a.endDate)) : a.endDate = m.parseDate(a.endDate, r, a.language, a.assumeNearbyYear) : a.endDate = 1 / 0), a.daysOfWeekDisabled = this._resolveDaysOfWeek(a.daysOfWeekDisabled || []), a.daysOfWeekHighlighted = this._resolveDaysOfWeek(a.daysOfWeekHighlighted || []), a.datesDisabled = a.datesDisabled || [], t.isArray(a.datesDisabled) || (a.datesDisabled = a.datesDisabled.split(",")), a.datesDisabled = t.map(a.datesDisabled, function (t) { return m.parseDate(t, r, a.language, a.assumeNearbyYear) }); var o = String(a.orientation).toLowerCase().split(/\s+/g), h = a.orientation.toLowerCase(); if (o = t.grep(o, function (t) { return /^auto|left|right|top|bottom$/.test(t) }), a.orientation = { x: "auto", y: "auto" }, h && "auto" !== h) if (1 === o.length) switch (o[0]) { case "top": case "bottom": a.orientation.y = o[0]; break; case "left": case "right": a.orientation.x = o[0] } else h = t.grep(o, function (t) { return /^left|right$/.test(t) }), a.orientation.x = h[0] || "auto", h = t.grep(o, function (t) { return /^top|bottom$/.test(t) }), a.orientation.y = h[0] || "auto"; if (a.defaultViewDate) { var l = a.defaultViewDate.year || (new Date).getFullYear(), c = a.defaultViewDate.month || 0, d = a.defaultViewDate.day || 1; a.defaultViewDate = i(l, c, d) } else a.defaultViewDate = s() }, _events: [], _secondaryEvents: [], _applyEvents: function (t) { for (var i, s, a, n = 0; n < t.length; n++)i = t[n][0], 2 === t[n].length ? (s = e, a = t[n][1]) : 3 === t[n].length && (s = t[n][1], a = t[n][2]), i.on(a, s) }, _unapplyEvents: function (t) { for (var i, s, a, n = 0; n < t.length; n++)i = t[n][0], 2 === t[n].length ? (a = e, s = t[n][1]) : 3 === t[n].length && (a = t[n][1], s = t[n][2]), i.off(s, a) }, _buildEvents: function () { var e = { keyup: t.proxy(function (e) { -1 === t.inArray(e.keyCode, [27, 37, 39, 38, 40, 32, 13, 9]) && this.update() }, this), keydown: t.proxy(this.keydown, this), paste: t.proxy(this.paste, this) }; !0 === this.o.showOnFocus && (e.focus = t.proxy(this.show, this)), this.isInput ? this._events = [[this.element, e]] : this.component && this.inputField.length ? this._events = [[this.inputField, e], [this.component, { click: t.proxy(this.show, this) }]] : this._events = [[this.element, { click: t.proxy(this.show, this), keydown: t.proxy(this.keydown, this) }]], this._events.push([this.element, "*", { blur: t.proxy(function (t) { this._focused_from = t.target }, this) }], [this.element, { blur: t.proxy(function (t) { this._focused_from = t.target }, this) }]), this.o.immediateUpdates && this._events.push([this.element, { "changeYear changeMonth": t.proxy(function (t) { this.update(t.date) }, this) }]), this._secondaryEvents = [[this.picker, { click: t.proxy(this.click, this) }], [this.picker, ".prev, .next", { click: t.proxy(this.navArrowsClick, this) }], [t(window), { resize: t.proxy(this.place, this) }], [t(document), { "mousedown touchstart": t.proxy(function (t) { this.element.is(t.target) || this.element.find(t.target).length || this.picker.is(t.target) || this.picker.find(t.target).length || this.isInline || this.hide() }, this) }]] }, _attachEvents: function () { this._detachEvents(), this._applyEvents(this._events) }, _detachEvents: function () { this._unapplyEvents(this._events) }, _attachSecondaryEvents: function () { this._detachSecondaryEvents(), this._applyEvents(this._secondaryEvents) }, _detachSecondaryEvents: function () { this._unapplyEvents(this._secondaryEvents) }, _trigger: function (e, i) { var s = i || this.dates.get(-1), a = this._utc_to_local(s); this.element.trigger({ type: e, date: a, viewMode: this.viewMode, dates: t.map(this.dates, this._utc_to_local), format: t.proxy(function (t, e) { 0 === arguments.length ? (t = this.dates.length - 1, e = this.o.format) : "string" == typeof t && (e = t, t = this.dates.length - 1), e = e || this.o.format; var i = this.dates.get(t); return m.formatDate(i, e, this.o.language) }, this) }) }, show: function () { return this.inputField.prop("disabled") || this.inputField.prop("readonly") && !1 === this.o.enableOnReadonly ? void 0 : (this.isInline || this.picker.appendTo(this.o.container), this.place(), this.picker.show(), this._attachSecondaryEvents(), this._trigger("show"), (window.navigator.msMaxTouchPoints || "ontouchstart" in document) && this.o.disableTouchKeyboard && t(this.element).blur(), this) }, hide: function () { return this.isInline || !this.picker.is(":visible") ? this : (this.focusDate = null, this.picker.hide().detach(), this._detachSecondaryEvents(), this.setViewMode(this.o.startView), this.o.forceParse && this.inputField.val() && this.setValue(), this._trigger("hide"), this) }, destroy: function () { return this.hide(), this._detachEvents(), this._detachSecondaryEvents(), this.picker.remove(), delete this.element.data().datepicker, this.isInput || delete this.element.data().date, this }, paste: function (e) { var i; if (e.originalEvent.clipboardData && e.originalEvent.clipboardData.types && -1 !== t.inArray("text/plain", e.originalEvent.clipboardData.types)) i = e.originalEvent.clipboardData.getData("text/plain"); else { if (!window.clipboardData) return; i = window.clipboardData.getData("Text") } this.setDate(i), this.update(), e.preventDefault() }, _utc_to_local: function (t) { if (!t) return t; var e = new Date(t.getTime() + 6e4 * t.getTimezoneOffset()); return e.getTimezoneOffset() !== t.getTimezoneOffset() && (e = new Date(t.getTime() + 6e4 * e.getTimezoneOffset())), e }, _local_to_utc: function (t) { return t && new Date(t.getTime() - 6e4 * t.getTimezoneOffset()) }, _zero_time: function (t) { return t && new Date(t.getFullYear(), t.getMonth(), t.getDate()) }, _zero_utc_time: function (t) { return t && i(t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate()) }, getDates: function () { return t.map(this.dates, this._utc_to_local) }, getUTCDates: function () { return t.map(this.dates, function (t) { return new Date(t) }) }, getDate: function () { return this._utc_to_local(this.getUTCDate()) }, getUTCDate: function () { var t = this.dates.get(-1); return t !== e ? new Date(t) : null }, clearDates: function () { this.inputField.val(""), this.update(), this._trigger("changeDate"), this.o.autoclose && this.hide() }, setDates: function () { var e = t.isArray(arguments[0]) ? arguments[0] : arguments; return this.update.apply(this, e), this._trigger("changeDate"), this.setValue(), this }, setUTCDates: function () { var e = t.isArray(arguments[0]) ? arguments[0] : arguments; return this.setDates.apply(this, t.map(e, this._utc_to_local)), this }, setDate: n("setDates"), setUTCDate: n("setUTCDates"), remove: n("destroy"), setValue: function () { var t = this.getFormattedDate(); return this.inputField.val(t), this }, getFormattedDate: function (i) { i === e && (i = this.o.format); var s = this.o.language; return t.map(this.dates, function (t) { return m.formatDate(t, i, s) }).join(this.o.multidateSeparator) }, getStartDate: function () { return this.o.startDate }, setStartDate: function (t) { return this._process_options({ startDate: t }), this.update(), this.updateNavArrows(), this }, getEndDate: function () { return this.o.endDate }, setEndDate: function (t) { return this._process_options({ endDate: t }), this.update(), this.updateNavArrows(), this }, setDaysOfWeekDisabled: function (t) { return this._process_options({ daysOfWeekDisabled: t }), this.update(), this }, setDaysOfWeekHighlighted: function (t) { return this._process_options({ daysOfWeekHighlighted: t }), this.update(), this }, setDatesDisabled: function (t) { return this._process_options({ datesDisabled: t }), this.update(), this }, place: function () { if (this.isInline) return this; var e = this.picker.outerWidth(), i = this.picker.outerHeight(), s = t(this.o.container), a = s.width(), n = "body" === this.o.container ? t(document).scrollTop() : s.scrollTop(), r = s.offset(), o = []; this.element.parents().each(function () { var e = t(this).css("z-index"); "auto" !== e && 0 !== e && o.push(parseInt(e)) }); var h = Math.max.apply(Math, o) + this.o.zIndexOffset, l = this.component ? this.component.parent().offset() : this.element.offset(), c = this.component ? this.component.outerHeight(!0) : this.element.outerHeight(!1), d = this.component ? this.component.outerWidth(!0) : this.element.outerWidth(!1), u = l.left - r.left, p = l.top - r.top; "body" !== this.o.container && (p += n), this.picker.removeClass("datepicker-orient-top datepicker-orient-bottom datepicker-orient-right datepicker-orient-left"), "auto" !== this.o.orientation.x ? (this.picker.addClass("datepicker-orient-" + this.o.orientation.x), "right" === this.o.orientation.x && (u -= e - d)) : l.left < 0 ? (this.picker.addClass("datepicker-orient-left"), u -= l.left - 10) : u + e > a ? (this.picker.addClass("datepicker-orient-right"), u += d - e) : this.o.rtl ? this.picker.addClass("datepicker-orient-right") : this.picker.addClass("datepicker-orient-left"); var f = this.o.orientation.y; if ("auto" === f && (f = 0 > -n + p - i ? "bottom" : "top"), this.picker.addClass("datepicker-orient-" + f), "top" === f ? p -= i + parseInt(this.picker.css("padding-top")) : p += c, this.o.rtl) { var m = a - (u + d); this.picker.css({ top: p, right: m, zIndex: h }) } else this.picker.css({ top: p, left: u, zIndex: h }); return this }, _allow_update: !0, update: function () { if (!this._allow_update) return this; var e = this.dates.copy(), i = [], s = !1; return arguments.length ? (t.each(arguments, t.proxy(function (t, e) { e instanceof Date && (e = this._local_to_utc(e)), i.push(e) }, this)), s = !0) : (i = (i = this.isInput ? this.element.val() : this.element.data("date") || this.inputField.val()) && this.o.multidate ? i.split(this.o.multidateSeparator) : [i], delete this.element.data().date), i = t.map(i, t.proxy(function (t) { return m.parseDate(t, this.o.format, this.o.language, this.o.assumeNearbyYear) }, this)), i = t.grep(i, t.proxy(function (t) { return !this.dateWithinRange(t) || !t }, this), !0), this.dates.replace(i), this.o.updateViewDate && (this.dates.length ? this.viewDate = new Date(this.dates.get(-1)) : this.viewDate < this.o.startDate ? this.viewDate = new Date(this.o.startDate) : this.viewDate > this.o.endDate ? this.viewDate = new Date(this.o.endDate) : this.viewDate = this.o.defaultViewDate), s ? (this.setValue(), this.element.change()) : this.dates.length && String(e) !== String(this.dates) && s && (this._trigger("changeDate"), this.element.change()), !this.dates.length && e.length && (this._trigger("clearDate"), this.element.change()), this.fill(), this }, fillDow: function () { var e = this.o.weekStart, i = "<tr>"; for (this.o.calendarWeeks && (i += '<th class="cw">&#160;</th>'); e < this.o.weekStart + 7;)i += '<th class="dow', -1 !== t.inArray(e, this.o.daysOfWeekDisabled) && (i += " disabled"), i += '">' + f[this.o.language].daysMin[e++ % 7] + "</th>"; i += "</tr>", this.picker.find(".datepicker-days thead").append(i) }, fillMonths: function () { for (var t = this._utc_to_local(this.viewDate), e = "", i = 0; 12 > i;) { e += '<span class="month' + (t && t.getMonth() === i ? " focused" : "") + '">' + f[this.o.language].monthsShort[i++] + "</span>" } this.picker.find(".datepicker-months td").html(e) }, setRange: function (e) { e && e.length ? this.range = t.map(e, function (t) { return t.valueOf() }) : delete this.range, this.fill() }, getClassNames: function (e) { var i = [], n = this.viewDate.getUTCFullYear(), r = this.viewDate.getUTCMonth(), o = s(); return e.getUTCFullYear() < n || e.getUTCFullYear() === n && e.getUTCMonth() < r ? i.push("old") : (e.getUTCFullYear() > n || e.getUTCFullYear() === n && e.getUTCMonth() > r) && i.push("new"), this.focusDate && e.valueOf() === this.focusDate.valueOf() && i.push("focused"), this.o.todayHighlight && a(e, o) && i.push("today"), -1 !== this.dates.contains(e) && i.push("active"), this.dateWithinRange(e) || i.push("disabled"), this.dateIsDisabled(e) && i.push("disabled", "disabled-date"), -1 !== t.inArray(e.getUTCDay(), this.o.daysOfWeekHighlighted) && i.push("highlighted"), this.range && (e > this.range[0] && e < this.range[this.range.length - 1] && i.push("range"), -1 !== t.inArray(e.valueOf(), this.range) && i.push("selected"), e.valueOf() === this.range[0] && i.push("range-start"), e.valueOf() === this.range[this.range.length - 1] && i.push("range-end")), i }, _fill_yearsView: function (i, s, a, n, r, o, h, l) { var c, d, u, p, f, m, g, v, y, b, k; for (c = "", d = this.picker.find(i), u = parseInt(r / a, 10) * a, f = parseInt(o / n, 10) * n, m = parseInt(h / n, 10) * n, p = t.map(this.dates, function (t) { return parseInt(t.getUTCFullYear() / n, 10) * n }), d.find(".datepicker-switch").text(u + "-" + (u + 9 * n)), g = u - n, v = -1; 11 > v; v += 1)y = [s], b = null, -1 === v ? y.push("old") : 10 === v && y.push("new"), -1 !== t.inArray(g, p) && y.push("active"), (f > g || g > m) && y.push("disabled"), g === this.viewDate.getFullYear() && y.push("focused"), l !== t.noop && ((k = l(new Date(g, 0, 1))) === e ? k = {} : "boolean" == typeof k ? k = { enabled: k } : "string" == typeof k && (k = { classes: k }), !1 === k.enabled && y.push("disabled"), k.classes && (y = y.concat(k.classes.split(/\s+/))), k.tooltip && (b = k.tooltip)), c += '<span class="' + y.join(" ") + '"' + (b ? ' title="' + b + '"' : "") + ">" + g + "</span>", g += n; d.find("td").html(c) }, fill: function () { var s, a, n = new Date(this.viewDate), r = n.getUTCFullYear(), o = n.getUTCMonth(), h = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCFullYear() : -1 / 0, l = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCMonth() : -1 / 0, c = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCFullYear() : 1 / 0, d = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCMonth() : 1 / 0, u = f[this.o.language].today || f.en.today || "", p = f[this.o.language].clear || f.en.clear || "", g = f[this.o.language].titleFormat || f.en.titleFormat; if (!isNaN(r) && !isNaN(o)) { this.picker.find(".datepicker-days .datepicker-switch").text(m.formatDate(n, g, this.o.language)), this.picker.find("tfoot .today").text(u).toggle(!1 !== this.o.todayBtn), this.picker.find("tfoot .clear").text(p).toggle(!1 !== this.o.clearBtn), this.picker.find("thead .datepicker-title").text(this.o.title).toggle("" !== this.o.title), this.updateNavArrows(), this.fillMonths(); var v = i(r, o, 0), y = v.getUTCDate(); v.setUTCDate(y - (v.getUTCDay() - this.o.weekStart + 7) % 7); var b = new Date(v); v.getUTCFullYear() < 100 && b.setUTCFullYear(v.getUTCFullYear()), b.setUTCDate(b.getUTCDate() + 42), b = b.valueOf(); for (var k, w, D = []; v.valueOf() < b;) { if ((k = v.getUTCDay()) === this.o.weekStart && (D.push("<tr>"), this.o.calendarWeeks)) { var C = new Date(+v + (this.o.weekStart - k - 7) % 7 * 864e5), T = new Date(Number(C) + (11 - C.getUTCDay()) % 7 * 864e5), M = new Date(Number(M = i(T.getUTCFullYear(), 0, 1)) + (11 - M.getUTCDay()) % 7 * 864e5), _ = (T - M) / 864e5 / 7 + 1; D.push('<td class="cw">' + _ + "</td>") } (w = this.getClassNames(v)).push("day"), this.o.beforeShowDay !== t.noop && ((a = this.o.beforeShowDay(this._utc_to_local(v))) === e ? a = {} : "boolean" == typeof a ? a = { enabled: a } : "string" == typeof a && (a = { classes: a }), !1 === a.enabled && w.push("disabled"), a.classes && (w = w.concat(a.classes.split(/\s+/))), a.tooltip && (s = a.tooltip)), w = t.isFunction(t.uniqueSort) ? t.uniqueSort(w) : t.unique(w), D.push('<td class="' + w.join(" ") + '"' + (s ? ' title="' + s + '"' : "") + (this.o.dateCells ? ' data-date="' + v.getTime().toString() + '"' : "") + ">" + v.getUTCDate() + "</td>"), s = null, k === this.o.weekEnd && D.push("</tr>"), v.setUTCDate(v.getUTCDate() + 1) } this.picker.find(".datepicker-days tbody").html(D.join("")); var x = f[this.o.language].monthsTitle || f.en.monthsTitle || "Months", A = this.picker.find(".datepicker-months").find(".datepicker-switch").text(this.o.maxViewMode < 2 ? x : r).end().find("tbody span").removeClass("active"); if (t.each(this.dates, function (t, e) { e.getUTCFullYear() === r && A.eq(e.getUTCMonth()).addClass("active") }), (h > r || r > c) && A.addClass("disabled"), r === h && A.slice(0, l).addClass("disabled"), r === c && A.slice(d + 1).addClass("disabled"), this.o.beforeShowMonth !== t.noop) { var S = this; t.each(A, function (i, s) { var a = new Date(r, i, 1), n = S.o.beforeShowMonth(a); n === e ? n = {} : "boolean" == typeof n ? n = { enabled: n } : "string" == typeof n && (n = { classes: n }), !1 !== n.enabled || t(s).hasClass("disabled") || t(s).addClass("disabled"), n.classes && t(s).addClass(n.classes), n.tooltip && t(s).prop("title", n.tooltip) }) } this._fill_yearsView(".datepicker-years", "year", 10, 1, r, h, c, this.o.beforeShowYear), this._fill_yearsView(".datepicker-decades", "decade", 100, 10, r, h, c, this.o.beforeShowDecade), this._fill_yearsView(".datepicker-centuries", "century", 1e3, 100, r, h, c, this.o.beforeShowCentury) } }, updateNavArrows: function () { if (this._allow_update) { var t, e, i = new Date(this.viewDate), s = i.getUTCFullYear(), a = i.getUTCMonth(); switch (this.viewMode) { case 0: t = this.o.startDate !== -1 / 0 && s <= this.o.startDate.getUTCFullYear() && a <= this.o.startDate.getUTCMonth(), e = this.o.endDate !== 1 / 0 && s >= this.o.endDate.getUTCFullYear() && a >= this.o.endDate.getUTCMonth(); break; case 1: case 2: case 3: case 4: t = this.o.startDate !== -1 / 0 && s <= this.o.startDate.getUTCFullYear(), e = this.o.endDate !== 1 / 0 && s >= this.o.endDate.getUTCFullYear() }this.picker.find(".prev").toggleClass("disabled", t), this.picker.find(".next").toggleClass("disabled", e) } }, click: function (e) { var a, n, r, o, h; e.preventDefault(), e.stopPropagation(), (a = t(e.target)).hasClass("datepicker-switch") && this.viewMode !== this.o.maxViewMode && this.setViewMode(this.viewMode + 1), a.hasClass("today") && !a.hasClass("day") && (this.setViewMode(0), this._setDate(s(), "linked" === this.o.todayBtn ? null : "view")), a.hasClass("clear") && this.clearDates(), a.hasClass("disabled") || (a.hasClass("day") && (r = Number(a.text()), o = this.viewDate.getUTCFullYear(), h = this.viewDate.getUTCMonth(), (a.hasClass("old") || a.hasClass("new")) && (h = (h + (n = a.hasClass("old") ? -1 : 1) + 12) % 12, (-1 === n && 11 === h || 1 === n && 0 === h) && (o += n, this.o.updateViewDate && this._trigger("changeYear", this.viewDate)), this.o.updateViewDate && this._trigger("changeMonth", this.viewDate)), this._setDate(i(o, h, r))), (a.hasClass("month") || a.hasClass("year") || a.hasClass("decade") || a.hasClass("century")) && (this.viewDate.setUTCDate(1), r = 1, 1 === this.viewMode ? (h = a.parent().find("span").index(a), o = this.viewDate.getUTCFullYear(), this.viewDate.setUTCMonth(h)) : (h = 0, o = Number(a.text()), this.viewDate.setUTCFullYear(o)), this._trigger(m.viewModes[this.viewMode - 1].e, this.viewDate), this.viewMode === this.o.minViewMode ? this._setDate(i(o, h, r)) : (this.setViewMode(this.viewMode - 1), this.fill()))), this.picker.is(":visible") && this._focused_from && this._focused_from.focus(), delete this._focused_from }, navArrowsClick: function (e) { var i = t(e.target).hasClass("prev") ? -1 : 1; 0 !== this.viewMode && (i *= 12 * m.viewModes[this.viewMode].navStep), this.viewDate = this.moveMonth(this.viewDate, i), this._trigger(m.viewModes[this.viewMode].e, this.viewDate), this.fill() }, _toggle_multidate: function (t) { var e = this.dates.contains(t); if (t || this.dates.clear(), -1 !== e ? (!0 === this.o.multidate || this.o.multidate > 1 || this.o.toggleActive) && this.dates.remove(e) : !1 === this.o.multidate ? (this.dates.clear(), this.dates.push(t)) : this.dates.push(t), "number" == typeof this.o.multidate) for (; this.dates.length > this.o.multidate;)this.dates.remove(0) }, _setDate: function (t, e) { e && "date" !== e || this._toggle_multidate(t && new Date(t)), (!e && this.o.updateViewDate || "view" === e) && (this.viewDate = t && new Date(t)), this.fill(), this.setValue(), e && "view" === e || this._trigger("changeDate"), this.inputField.trigger("change"), !this.o.autoclose || e && "date" !== e || this.hide() }, moveDay: function (t, e) { var i = new Date(t); return i.setUTCDate(t.getUTCDate() + e), i }, moveWeek: function (t, e) { return this.moveDay(t, 7 * e) }, moveMonth: function (t, e) { if (!(i = t) || isNaN(i.getTime())) return this.o.defaultViewDate; var i; if (!e) return t; var s, a, n = new Date(t.valueOf()), r = n.getUTCDate(), o = n.getUTCMonth(), h = Math.abs(e); if (e = e > 0 ? 1 : -1, 1 === h) a = -1 === e ? function () { return n.getUTCMonth() === o } : function () { return n.getUTCMonth() !== s }, s = o + e, n.setUTCMonth(s), s = (s + 12) % 12; else { for (var l = 0; h > l; l++)n = this.moveMonth(n, e); s = n.getUTCMonth(), n.setUTCDate(r), a = function () { return s !== n.getUTCMonth() } } for (; a();)n.setUTCDate(--r), n.setUTCMonth(s); return n }, moveYear: function (t, e) { return this.moveMonth(t, 12 * e) }, moveAvailableDate: function (t, e, i) { do { if (t = this[i](t, e), !this.dateWithinRange(t)) return !1; i = "moveDay" } while (this.dateIsDisabled(t)); return t }, weekOfDateIsDisabled: function (e) { return -1 !== t.inArray(e.getUTCDay(), this.o.daysOfWeekDisabled) }, dateIsDisabled: function (e) { return this.weekOfDateIsDisabled(e) || t.grep(this.o.datesDisabled, function (t) { return a(e, t) }).length > 0 }, dateWithinRange: function (t) { return t >= this.o.startDate && t <= this.o.endDate }, keydown: function (t) { if (this.picker.is(":visible")) { var e, i, s = !1, a = this.focusDate || this.viewDate; switch (t.keyCode) { case 27: this.focusDate ? (this.focusDate = null, this.viewDate = this.dates.get(-1) || this.viewDate, this.fill()) : this.hide(), t.preventDefault(), t.stopPropagation(); break; case 37: case 38: case 39: case 40: if (!this.o.keyboardNavigation || 7 === this.o.daysOfWeekDisabled.length) break; e = 37 === t.keyCode || 38 === t.keyCode ? -1 : 1, 0 === this.viewMode ? t.ctrlKey ? (i = this.moveAvailableDate(a, e, "moveYear")) && this._trigger("changeYear", this.viewDate) : t.shiftKey ? (i = this.moveAvailableDate(a, e, "moveMonth")) && this._trigger("changeMonth", this.viewDate) : 37 === t.keyCode || 39 === t.keyCode ? i = this.moveAvailableDate(a, e, "moveDay") : this.weekOfDateIsDisabled(a) || (i = this.moveAvailableDate(a, e, "moveWeek")) : 1 === this.viewMode ? ((38 === t.keyCode || 40 === t.keyCode) && (e *= 4), i = this.moveAvailableDate(a, e, "moveMonth")) : 2 === this.viewMode && ((38 === t.keyCode || 40 === t.keyCode) && (e *= 4), i = this.moveAvailableDate(a, e, "moveYear")), i && (this.focusDate = this.viewDate = i, this.setValue(), this.fill(), t.preventDefault()); break; case 13: if (!this.o.forceParse) break; a = this.focusDate || this.dates.get(-1) || this.viewDate, this.o.keyboardNavigation && (this._toggle_multidate(a), s = !0), this.focusDate = null, this.viewDate = this.dates.get(-1) || this.viewDate, this.setValue(), this.fill(), this.picker.is(":visible") && (t.preventDefault(), t.stopPropagation(), this.o.autoclose && this.hide()); break; case 9: this.focusDate = null, this.viewDate = this.dates.get(-1) || this.viewDate, this.fill(), this.hide() }s && (this.dates.length ? this._trigger("changeDate") : this._trigger("clearDate"), this.inputField.trigger("change")) } else (40 === t.keyCode || 27 === t.keyCode) && (this.show(), t.stopPropagation()) }, setViewMode: function (t) { this.viewMode = t, this.picker.children("div").hide().filter(".datepicker-" + m.viewModes[this.viewMode].clsName).show(), this.updateNavArrows(), this._trigger("changeViewMode", new Date(this.viewDate)) } }; var l = function (e, i) { t.data(e, "datepicker", this), this.element = t(e), this.inputs = t.map(i.inputs, function (t) { return t.jquery ? t[0] : t }), delete i.inputs, this.keepEmptyValues = i.keepEmptyValues, delete i.keepEmptyValues, d.call(t(this.inputs), i).on("changeDate", t.proxy(this.dateUpdated, this)), this.pickers = t.map(this.inputs, function (e) { return t.data(e, "datepicker") }), this.updateDates() }; l.prototype = { updateDates: function () { this.dates = t.map(this.pickers, function (t) { return t.getUTCDate() }), this.updateRanges() }, updateRanges: function () { var e = t.map(this.dates, function (t) { return t.valueOf() }); t.each(this.pickers, function (t, i) { i.setRange(e) }) }, dateUpdated: function (i) { if (!this.updating) { this.updating = !0; var s = t.data(i.target, "datepicker"); if (s !== e) { var a = s.getUTCDate(), n = this.keepEmptyValues, r = t.inArray(i.target, this.inputs), o = r - 1, h = r + 1, l = this.inputs.length; if (-1 !== r) { if (t.each(this.pickers, function (t, e) { e.getUTCDate() || e !== s && n || e.setUTCDate(a) }), a < this.dates[o]) for (; o >= 0 && a < this.dates[o];)this.pickers[o--].setUTCDate(a); else if (a > this.dates[h]) for (; l > h && a > this.dates[h];)this.pickers[h++].setUTCDate(a); this.updateDates(), delete this.updating } } } }, destroy: function () { t.map(this.pickers, function (t) { t.destroy() }), t(this.inputs).off("changeDate", this.dateUpdated), delete this.element.data().datepicker }, remove: n("destroy") }; var c = t.fn.datepicker, d = function (i) { var s, a = Array.apply(null, arguments); if (a.shift(), this.each(function () { var e = t(this), n = e.data("datepicker"), r = "object" == typeof i && i; if (!n) { var o = function (e, i) { function s(t, e) { return e.toLowerCase() } var a = t(e).data(), n = {}, r = new RegExp("^" + i.toLowerCase() + "([A-Z])"); for (var o in i = new RegExp("^" + i.toLowerCase()), a) i.test(o) && (n[o.replace(r, s)] = a[o]); return n }(this, "date"), c = function (e) { var i = {}; if (f[e] || (e = e.split("-")[0], f[e])) { var s = f[e]; return t.each(p, function (t, e) { e in s && (i[e] = s[e]) }), i } }(t.extend({}, u, o, r).language), d = t.extend({}, u, c, o, r); e.hasClass("input-daterange") || d.inputs ? (t.extend(d, { inputs: d.inputs || e.find("input").toArray() }), n = new l(this, d)) : n = new h(this, d), e.data("datepicker", n) } "string" == typeof i && "function" == typeof n[i] && (s = n[i].apply(n, a)) }), s === e || s instanceof h || s instanceof l) return this; if (this.length > 1) throw new Error("Using only allowed for the collection of a single element (" + i + " function)"); return s }; t.fn.datepicker = d; var u = t.fn.datepicker.defaults = { assumeNearbyYear: !1, autoclose: !1, beforeShowDay: t.noop, beforeShowMonth: t.noop, beforeShowYear: t.noop, beforeShowDecade: t.noop, beforeShowCentury: t.noop, calendarWeeks: !1, clearBtn: !1, toggleActive: !1, daysOfWeekDisabled: [], daysOfWeekHighlighted: [], datesDisabled: [], endDate: 1 / 0, forceParse: !0, format: "mm/dd/yyyy", keepEmptyValues: !1, keyboardNavigation: !0, language: "en", minViewMode: 0, maxViewMode: 4, multidate: !1, multidateSeparator: ",", orientation: "auto", rtl: !1, startDate: -1 / 0, startView: 0, todayBtn: !1, todayHighlight: !1, updateViewDate: !0, weekStart: 0, disableTouchKeyboard: !1, enableOnReadonly: !0, showOnFocus: !0, zIndexOffset: 10, container: "body", immediateUpdates: !1, dateCells: !1, title: "", templates: { leftArrow: "&#x00AB;", rightArrow: "&#x00BB;" } }, p = t.fn.datepicker.locale_opts = ["format", "rtl", "weekStart"]; t.fn.datepicker.Constructor = h; var f = t.fn.datepicker.dates = { en: { days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], today: "Today", clear: "Clear", titleFormat: "MM yyyy" } }, m = { viewModes: [{ names: ["days", "month"], clsName: "days", e: "changeMonth" }, { names: ["months", "year"], clsName: "months", e: "changeYear", navStep: 1 }, { names: ["years", "decade"], clsName: "years", e: "changeDecade", navStep: 10 }, { names: ["decades", "century"], clsName: "decades", e: "changeCentury", navStep: 100 }, { names: ["centuries", "millennium"], clsName: "centuries", e: "changeMillennium", navStep: 1e3 }], validParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g, nonpunctuation: /[^ -\/:-@\u5e74\u6708\u65e5\[-`{-~\t\n\r]+/g, parseFormat: function (t) { if ("function" == typeof t.toValue && "function" == typeof t.toDisplay) return t; var e = t.replace(this.validParts, "\0").split("\0"), i = t.match(this.validParts); if (!e || !e.length || !i || 0 === i.length) throw new Error("Invalid date format."); return { separators: e, parts: i } }, parseDate: function (a, n, r, o) { function l() { var t = this.slice(0, c[p].length), e = c[p].slice(0, t.length); return t.toLowerCase() === e.toLowerCase() } if (!a) return e; if (a instanceof Date) return a; if ("string" == typeof n && (n = m.parseFormat(n)), n.toValue) return n.toValue(a, n, r); var c, d, u, p, g, v = { d: "moveDay", m: "moveMonth", w: "moveWeek", y: "moveYear" }, y = { yesterday: "-1d", today: "+0d", tomorrow: "+1d" }; if (a in y && (a = y[a]), /^[\-+]\d+[dmwy]([\s,]+[\-+]\d+[dmwy])*$/i.test(a)) { for (c = a.match(/([\-+]\d+)([dmwy])/gi), a = new Date, p = 0; p < c.length; p++)d = c[p].match(/([\-+]\d+)([dmwy])/i), u = Number(d[1]), g = v[d[2].toLowerCase()], a = h.prototype[g](a, u); return i(a.getUTCFullYear(), a.getUTCMonth(), a.getUTCDate()) } c = a && a.match(this.nonpunctuation) || [], a = new Date; var b, k, w = {}, D = ["yyyy", "yy", "M", "MM", "m", "mm", "d", "dd"], C = { yyyy: function (t, e) { return t.setUTCFullYear(o ? (i = e, !0 === (s = o) && (s = 10), 100 > i && (i += 2e3) > (new Date).getFullYear() + s && (i -= 100), i) : e); var i, s }, m: function (t, e) { if (isNaN(t)) return t; for (e -= 1; 0 > e;)e += 12; for (e %= 12, t.setUTCMonth(e); t.getUTCMonth() !== e;)t.setUTCDate(t.getUTCDate() - 1); return t }, d: function (t, e) { return t.setUTCDate(e) } }; C.yy = C.yyyy, C.M = C.MM = C.mm = C.m, C.dd = C.d, a = s(); var T = n.parts.slice(); if (c.length !== T.length && (T = t(T).filter(function (e, i) { return -1 !== t.inArray(i, D) }).toArray()), c.length === T.length) { var M, _, x; for (p = 0, M = T.length; M > p; p++) { if (b = parseInt(c[p], 10), d = T[p], isNaN(b)) switch (d) { case "MM": k = t(f[r].months).filter(l), b = t.inArray(k[0], f[r].months) + 1; break; case "M": k = t(f[r].monthsShort).filter(l), b = t.inArray(k[0], f[r].monthsShort) + 1 }w[d] = b } for (p = 0; p < D.length; p++)(x = D[p]) in w && !isNaN(w[x]) && (_ = new Date(a), C[x](_, w[x]), isNaN(_) || (a = _)) } return a }, formatDate: function (e, i, s) { if (!e) return ""; if ("string" == typeof i && (i = m.parseFormat(i)), i.toDisplay) return i.toDisplay(e, i, s); var a = { d: e.getUTCDate(), D: f[s].daysShort[e.getUTCDay()], DD: f[s].days[e.getUTCDay()], m: e.getUTCMonth() + 1, M: f[s].monthsShort[e.getUTCMonth()], MM: f[s].months[e.getUTCMonth()], yy: e.getUTCFullYear().toString().substring(2), yyyy: e.getUTCFullYear() }; a.dd = (a.d < 10 ? "0" : "") + a.d, a.mm = (a.m < 10 ? "0" : "") + a.m, e = []; for (var n = t.extend([], i.separators), r = 0, o = i.parts.length; o >= r; r++)n.length && e.push(n.shift()), e.push(a[i.parts[r]]); return e.join("") }, headTemplate: '<thead><tr><th colspan="7" class="datepicker-title"></th></tr><tr><th class="prev">&laquo;</th><th colspan="5" class="datepicker-switch"></th><th class="next">&raquo;</th></tr></thead>', contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>', footTemplate: '<tfoot><tr><th colspan="7" class="today"></th></tr><tr><th colspan="7" class="clear"></th></tr></tfoot>' }; m.template = '<div class="datepicker"><div class="datepicker-days"><table class="table-condensed">' + m.headTemplate + "<tbody></tbody>" + m.footTemplate + '</table></div><div class="datepicker-months"><table class="table-condensed">' + m.headTemplate + m.contTemplate + m.footTemplate + '</table></div><div class="datepicker-years"><table class="table-condensed">' + m.headTemplate + m.contTemplate + m.footTemplate + '</table></div><div class="datepicker-decades"><table class="table-condensed">' + m.headTemplate + m.contTemplate + m.footTemplate + '</table></div><div class="datepicker-centuries"><table class="table-condensed">' + m.headTemplate + m.contTemplate + m.footTemplate + "</table></div></div>", t.fn.datepicker.DPGlobal = m, t.fn.datepicker.noConflict = function () { return t.fn.datepicker = c, this }, t.fn.datepicker.version = "1.7.0-dev", t(document).on("focus.datepicker.data-api click.datepicker.data-api", '[data-provide="datepicker"]', function (e) { var i = t(this); i.data("datepicker") || (e.preventDefault(), d.call(i, "show")) }), t(function () { d.call(t('[data-provide="datepicker-inline"]')) }) }), function (t) { "function" == typeof define && define.amd ? define(["jquery"], t) : "object" == typeof module && module.exports ? module.exports = t(require("jquery")) : t(jQuery) }(function (t) { t.extend(t.fn, { validate: function (e) { if (this.length) { var i = t.data(this[0], "validator"); return i || (this.attr("novalidate", "novalidate"), i = new t.validator(e, this[0]), t.data(this[0], "validator", i), i.settings.onsubmit && (this.on("click.validate", ":submit", function (e) { i.submitButton = e.currentTarget, t(this).hasClass("cancel") && (i.cancelSubmit = !0), void 0 !== t(this).attr("formnovalidate") && (i.cancelSubmit = !0) }), this.on("submit.validate", function (e) { function s() { var s, a; return i.submitButton && (i.settings.submitHandler || i.formSubmitted) && (s = t("<input type='hidden'/>").attr("name", i.submitButton.name).val(t(i.submitButton).val()).appendTo(i.currentForm)), !i.settings.submitHandler || (a = i.settings.submitHandler.call(i, i.currentForm, e), s && s.remove(), void 0 !== a && a) } return i.settings.debug && e.preventDefault(), i.cancelSubmit ? (i.cancelSubmit = !1, s()) : i.form() ? i.pendingRequest ? (i.formSubmitted = !0, !1) : s() : (i.focusInvalid(), !1) })), i) } e && e.debug && window.console && console.warn("Nothing selected, can't validate, returning nothing.") }, valid: function () { var e, i, s; return t(this[0]).is("form") ? e = this.validate().form() : (s = [], e = !0, i = t(this[0].form).validate(), this.each(function () { (e = i.element(this) && e) || (s = s.concat(i.errorList)) }), i.errorList = s), e }, rules: function (e, i) { var s, a, n, r, o, h, l = this[0]; if (null != l && (!l.form && l.hasAttribute("contenteditable") && (l.form = this.closest("form")[0], l.name = this.attr("name")), null != l.form)) { if (e) switch (s = t.data(l.form, "validator").settings, a = s.rules, n = t.validator.staticRules(l), e) { case "add": t.extend(n, t.validator.normalizeRule(i)), delete n.messages, a[l.name] = n, i.messages && (s.messages[l.name] = t.extend(s.messages[l.name], i.messages)); break; case "remove": return i ? (h = {}, t.each(i.split(/\s/), function (t, e) { h[e] = n[e], delete n[e] }), h) : (delete a[l.name], n) }return (r = t.validator.normalizeRules(t.extend({}, t.validator.classRules(l), t.validator.attributeRules(l), t.validator.dataRules(l), t.validator.staticRules(l)), l)).required && (o = r.required, delete r.required, r = t.extend({ required: o }, r)), r.remote && (o = r.remote, delete r.remote, r = t.extend(r, { remote: o })), r } } }), t.extend(t.expr.pseudos || t.expr[":"], { blank: function (e) { return !t.trim("" + t(e).val()) }, filled: function (e) { var i = t(e).val(); return null !== i && !!t.trim("" + i) }, unchecked: function (e) { return !t(e).prop("checked") } }), t.validator = function (e, i) { this.settings = t.extend(!0, {}, t.validator.defaults, e), this.currentForm = i, this.init() }, t.validator.format = function (e, i) { return 1 === arguments.length ? function () { var i = t.makeArray(arguments); return i.unshift(e), t.validator.format.apply(this, i) } : void 0 === i ? e : (arguments.length > 2 && i.constructor !== Array && (i = t.makeArray(arguments).slice(1)), i.constructor !== Array && (i = [i]), t.each(i, function (t, i) { e = e.replace(new RegExp("\\{" + t + "\\}", "g"), function () { return i }) }), e) }, t.extend(t.validator, { defaults: { messages: {}, groups: {}, rules: {}, errorClass: "error", pendingClass: "pending", validClass: "valid", errorElement: "label", focusCleanup: !1, focusInvalid: !0, errorContainer: t([]), errorLabelContainer: t([]), onsubmit: !0, ignore: ":hidden", ignoreTitle: !1, onfocusin: function (t) { this.lastActive = t, this.settings.focusCleanup && (this.settings.unhighlight && this.settings.unhighlight.call(this, t, this.settings.errorClass, this.settings.validClass), this.hideThese(this.errorsFor(t))) }, onfocusout: function (t) { this.checkable(t) || !(t.name in this.submitted) && this.optional(t) || this.element(t) }, onkeyup: function (e, i) { 9 === i.which && "" === this.elementValue(e) || -1 !== t.inArray(i.keyCode, [16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144, 225]) || (e.name in this.submitted || e.name in this.invalid) && this.element(e) }, onclick: function (t) { t.name in this.submitted ? this.element(t) : t.parentNode.name in this.submitted && this.element(t.parentNode) }, highlight: function (e, i, s) { "radio" === e.type ? this.findByName(e.name).addClass(i).removeClass(s) : t(e).addClass(i).removeClass(s) }, unhighlight: function (e, i, s) { "radio" === e.type ? this.findByName(e.name).removeClass(i).addClass(s) : t(e).removeClass(i).addClass(s) } }, setDefaults: function (e) { t.extend(t.validator.defaults, e) }, messages: { required: "This field is required.", remote: "Please fix this field.", email: "Please enter a valid email address.", url: "Please enter a valid URL.", date: "Please enter a valid date.", dateISO: "Please enter a valid date (ISO).", number: "Please enter a valid number.", digits: "Please enter only digits.", equalTo: "Please enter the same value again.", maxlength: t.validator.format("Please enter no more than {0} characters."), minlength: t.validator.format("Please enter at least {0} characters."), rangelength: t.validator.format("Please enter a value between {0} and {1} characters long."), range: t.validator.format("Please enter a value between {0} and {1}."), max: t.validator.format("Please enter a value less than or equal to {0}."), min: t.validator.format("Please enter a value greater than or equal to {0}."), step: t.validator.format("Please enter a multiple of {0}.") }, autoCreateRanges: !1, prototype: { init: function () { function e(e) { !this.form && this.hasAttribute("contenteditable") && (this.form = t(this).closest("form")[0], this.name = t(this).attr("name")); var i = t.data(this.form, "validator"), s = "on" + e.type.replace(/^validate/, ""), a = i.settings; a[s] && !t(this).is(a.ignore) && a[s].call(i, this, e) } this.labelContainer = t(this.settings.errorLabelContainer), this.errorContext = this.labelContainer.length && this.labelContainer || t(this.currentForm), this.containers = t(this.settings.errorContainer).add(this.settings.errorLabelContainer), this.submitted = {}, this.valueCache = {}, this.pendingRequest = 0, this.pending = {}, this.invalid = {}, this.reset(); var i, s = this.groups = {}; t.each(this.settings.groups, function (e, i) { "string" == typeof i && (i = i.split(/\s/)), t.each(i, function (t, i) { s[i] = e }) }), i = this.settings.rules, t.each(i, function (e, s) { i[e] = t.validator.normalizeRule(s) }), t(this.currentForm).on("focusin.validate focusout.validate keyup.validate", ":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox'], [contenteditable], [type='button']", e).on("click.validate", "select, option, [type='radio'], [type='checkbox']", e), this.settings.invalidHandler && t(this.currentForm).on("invalid-form.validate", this.settings.invalidHandler) }, form: function () { return this.checkForm(), t.extend(this.submitted, this.errorMap), this.invalid = t.extend({}, this.errorMap), this.valid() || t(this.currentForm).triggerHandler("invalid-form", [this]), this.showErrors(), this.valid() }, checkForm: function () { this.prepareForm(); for (var t = 0, e = this.currentElements = this.elements(); e[t]; t++)this.check(e[t]); return this.valid() }, element: function (e) { var i, s, a = this.clean(e), n = this.validationTargetFor(a), r = this, o = !0; return void 0 === n ? delete this.invalid[a.name] : (this.prepareElement(n), this.currentElements = t(n), (s = this.groups[n.name]) && t.each(this.groups, function (t, e) { e === s && t !== n.name && ((a = r.validationTargetFor(r.clean(r.findByName(t)))) && a.name in r.invalid && (r.currentElements.push(a), o = r.check(a) && o)) }), i = !1 !== this.check(n), o = o && i, this.invalid[n.name] = !i, this.numberOfInvalids() || (this.toHide = this.toHide.add(this.containers)), this.showErrors(), t(e).attr("aria-invalid", !i)), o }, showErrors: function (e) { if (e) { var i = this; t.extend(this.errorMap, e), this.errorList = t.map(this.errorMap, function (t, e) { return { message: t, element: i.findByName(e)[0] } }), this.successList = t.grep(this.successList, function (t) { return !(t.name in e) }) } this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors() }, resetForm: function () { t.fn.resetForm && t(this.currentForm).resetForm(), this.invalid = {}, this.submitted = {}, this.prepareForm(), this.hideErrors(); var e = this.elements().removeData("previousValue").removeAttr("aria-invalid"); this.resetElements(e) }, resetElements: function (t) { var e; if (this.settings.unhighlight) for (e = 0; t[e]; e++)this.settings.unhighlight.call(this, t[e], this.settings.errorClass, ""), this.findByName(t[e].name).removeClass(this.settings.validClass); else t.removeClass(this.settings.errorClass).removeClass(this.settings.validClass) }, numberOfInvalids: function () { return this.objectLength(this.invalid) }, objectLength: function (t) { var e, i = 0; for (e in t) void 0 !== t[e] && null !== t[e] && !1 !== t[e] && i++; return i }, hideErrors: function () { this.hideThese(this.toHide) }, hideThese: function (t) { t.not(this.containers).text(""), this.addWrapper(t).hide() }, valid: function () { return 0 === this.size() }, size: function () { return this.errorList.length }, focusInvalid: function () { if (this.settings.focusInvalid) try { t(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin") } catch (t) { } }, findLastActive: function () { var e = this.lastActive; return e && 1 === t.grep(this.errorList, function (t) { return t.element.name === e.name }).length && e }, elements: function () { var e = this, i = {}; return t(this.currentForm).find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter(function () { var s = this.name || t(this).attr("name"); return !s && e.settings.debug && window.console && console.error("%o has no name assigned", this), this.hasAttribute("contenteditable") && (this.form = t(this).closest("form")[0], this.name = s), !(s in i || !e.objectLength(t(this).rules()) || (i[s] = !0, 0)) }) }, clean: function (e) { return t(e)[0] }, errors: function () { var e = this.settings.errorClass.split(" ").join("."); return t(this.settings.errorElement + "." + e, this.errorContext) }, resetInternals: function () { this.successList = [], this.errorList = [], this.errorMap = {}, this.toShow = t([]), this.toHide = t([]) }, reset: function () { this.resetInternals(), this.currentElements = t([]) }, prepareForm: function () { this.reset(), this.toHide = this.errors().add(this.containers) }, prepareElement: function (t) { this.reset(), this.toHide = this.errorsFor(t) }, elementValue: function (e) { var i, s, a = t(e), n = e.type; return "radio" === n || "checkbox" === n ? this.findByName(e.name).filter(":checked").val() : "number" === n && void 0 !== e.validity ? e.validity.badInput ? "NaN" : a.val() : (i = e.hasAttribute("contenteditable") ? a.text() : a.val(), "file" === n ? "C:\\fakepath\\" === i.substr(0, 12) ? i.substr(12) : (s = i.lastIndexOf("/")) >= 0 ? i.substr(s + 1) : (s = i.lastIndexOf("\\")) >= 0 ? i.substr(s + 1) : i : "string" == typeof i ? i.replace(/\r/g, "") : i) }, check: function (e) { e = this.validationTargetFor(this.clean(e)); var i, s, a, n, r = t(e).rules(), o = t.map(r, function (t, e) { return e }).length, h = !1, l = this.elementValue(e); if ("function" == typeof r.normalizer ? n = r.normalizer : "function" == typeof this.settings.normalizer && (n = this.settings.normalizer), n) { if ("string" != typeof (l = n.call(e, l))) throw new TypeError("The normalizer should return a string value."); delete r.normalizer } for (s in r) { a = { method: s, parameters: r[s] }; try { if ("dependency-mismatch" === (i = t.validator.methods[s].call(this, l, e, a.parameters)) && 1 === o) { h = !0; continue } if (h = !1, "pending" === i) return void (this.toHide = this.toHide.not(this.errorsFor(e))); if (!i) return this.formatAndAdd(e, a), !1 } catch (t) { throw this.settings.debug && window.console && console.log("Exception occurred when checking element " + e.id + ", check the '" + a.method + "' method.", t), t instanceof TypeError && (t.message += ".  Exception occurred when checking element " + e.id + ", check the '" + a.method + "' method."), t } } if (!h) return this.objectLength(r) && this.successList.push(e), !0 }, customDataMessage: function (e, i) { return t(e).data("msg" + i.charAt(0).toUpperCase() + i.substring(1).toLowerCase()) || t(e).data("msg") }, customMessage: function (t, e) { var i = this.settings.messages[t]; return i && (i.constructor === String ? i : i[e]) }, findDefined: function () { for (var t = 0; t < arguments.length; t++)if (void 0 !== arguments[t]) return arguments[t] }, defaultMessage: function (e, i) { "string" == typeof i && (i = { method: i }); var s = this.findDefined(this.customMessage(e.name, i.method), this.customDataMessage(e, i.method), !this.settings.ignoreTitle && e.title || void 0, t.validator.messages[i.method], "<strong>Warning: No message defined for " + e.name + "</strong>"), a = /\$?\{(\d+)\}/g; return "function" == typeof s ? s = s.call(this, i.parameters, e) : a.test(s) && (s = t.validator.format(s.replace(a, "{$1}"), i.parameters)), s }, formatAndAdd: function (t, e) { var i = this.defaultMessage(t, e); this.errorList.push({ message: i, element: t, method: e.method }), this.errorMap[t.name] = i, this.submitted[t.name] = i }, addWrapper: function (t) { return this.settings.wrapper && (t = t.add(t.parent(this.settings.wrapper))), t }, defaultShowErrors: function () { var t, e, i; for (t = 0; this.errorList[t]; t++)i = this.errorList[t], this.settings.highlight && this.settings.highlight.call(this, i.element, this.settings.errorClass, this.settings.validClass), this.showLabel(i.element, i.message); if (this.errorList.length && (this.toShow = this.toShow.add(this.containers)), this.settings.success) for (t = 0; this.successList[t]; t++)this.showLabel(this.successList[t]); if (this.settings.unhighlight) for (t = 0, e = this.validElements(); e[t]; t++)this.settings.unhighlight.call(this, e[t], this.settings.errorClass, this.settings.validClass); this.toHide = this.toHide.not(this.toShow), this.hideErrors(), this.addWrapper(this.toShow).show() }, validElements: function () { return this.currentElements.not(this.invalidElements()) }, invalidElements: function () { return t(this.errorList).map(function () { return this.element }) }, showLabel: function (e, i) { var s, a, n, r, o = this.errorsFor(e), h = this.idOrName(e), l = t(e).attr("aria-describedby"); o.length ? (o.removeClass(this.settings.validClass).addClass(this.settings.errorClass), o.html(i)) : (s = o = t("<" + this.settings.errorElement + ">").attr("id", h + "-error").addClass(this.settings.errorClass).html(i || ""), this.settings.wrapper && (s = o.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()), this.labelContainer.length ? this.labelContainer.append(s) : this.settings.errorPlacement ? this.settings.errorPlacement.call(this, s, t(e)) : s.insertAfter(e), o.is("label") ? o.attr("for", h) : 0 === o.parents("label[for='" + this.escapeCssMeta(h) + "']").length && (n = o.attr("id"), l ? l.match(new RegExp("\\b" + this.escapeCssMeta(n) + "\\b")) || (l += " " + n) : l = n, t(e).attr("aria-describedby", l), (a = this.groups[e.name]) && (r = this, t.each(r.groups, function (e, i) { i === a && t("[name='" + r.escapeCssMeta(e) + "']", r.currentForm).attr("aria-describedby", o.attr("id")) })))), !i && this.settings.success && (o.text(""), "string" == typeof this.settings.success ? o.addClass(this.settings.success) : this.settings.success(o, e)), this.toShow = this.toShow.add(o) }, errorsFor: function (e) { var i = this.escapeCssMeta(this.idOrName(e)), s = t(e).attr("aria-describedby"), a = "label[for='" + i + "'], label[for='" + i + "'] *"; return s && (a = a + ", #" + this.escapeCssMeta(s).replace(/\s+/g, ", #")), this.errors().filter(a) }, escapeCssMeta: function (t) { return t.replace(/([\\!"#$%&'()*+,.\/:;<=>?@\[\]^`{|}~])/g, "\\$1") }, idOrName: function (t) { return this.groups[t.name] || (this.checkable(t) ? t.name : t.id || t.name) }, validationTargetFor: function (e) { return this.checkable(e) && (e = this.findByName(e.name)), t(e).not(this.settings.ignore)[0] }, checkable: function (t) { return /radio|checkbox/i.test(t.type) }, findByName: function (e) { return t(this.currentForm).find("[name='" + this.escapeCssMeta(e) + "']") }, getLength: function (e, i) { switch (i.nodeName.toLowerCase()) { case "select": return t("option:selected", i).length; case "input": if (this.checkable(i)) return this.findByName(i.name).filter(":checked").length }return e.length }, depend: function (t, e) { return !this.dependTypes[typeof t] || this.dependTypes[typeof t](t, e) }, dependTypes: { boolean: function (t) { return t }, string: function (e, i) { return !!t(e, i.form).length }, function: function (t, e) { return t(e) } }, optional: function (e) { var i = this.elementValue(e); return !t.validator.methods.required.call(this, i, e) && "dependency-mismatch" }, startRequest: function (e) { this.pending[e.name] || (this.pendingRequest++, t(e).addClass(this.settings.pendingClass), this.pending[e.name] = !0) }, stopRequest: function (e, i) { this.pendingRequest--, this.pendingRequest < 0 && (this.pendingRequest = 0), delete this.pending[e.name], t(e).removeClass(this.settings.pendingClass), i && 0 === this.pendingRequest && this.formSubmitted && this.form() ? (t(this.currentForm).submit(), this.submitButton && t("input:hidden[name='" + this.submitButton.name + "']", this.currentForm).remove(), this.formSubmitted = !1) : !i && 0 === this.pendingRequest && this.formSubmitted && (t(this.currentForm).triggerHandler("invalid-form", [this]), this.formSubmitted = !1) }, previousValue: function (e, i) { return i = "string" == typeof i && i || "remote", t.data(e, "previousValue") || t.data(e, "previousValue", { old: null, valid: !0, message: this.defaultMessage(e, { method: i }) }) }, destroy: function () { this.resetForm(), t(this.currentForm).off(".validate").removeData("validator").find(".validate-equalTo-blur").off(".validate-equalTo").removeClass("validate-equalTo-blur") } }, classRuleSettings: { required: { required: !0 }, email: { email: !0 }, url: { url: !0 }, date: { date: !0 }, dateISO: { dateISO: !0 }, number: { number: !0 }, digits: { digits: !0 }, creditcard: { creditcard: !0 } }, addClassRules: function (e, i) { e.constructor === String ? this.classRuleSettings[e] = i : t.extend(this.classRuleSettings, e) }, classRules: function (e) { var i = {}, s = t(e).attr("class"); return s && t.each(s.split(" "), function () { this in t.validator.classRuleSettings && t.extend(i, t.validator.classRuleSettings[this]) }), i }, normalizeAttributeRule: function (t, e, i, s) { /min|max|step/.test(i) && (null === e || /number|range|text/.test(e)) && (s = Number(s), isNaN(s) && (s = void 0)), s || 0 === s ? t[i] = s : e === i && "range" !== e && (t[i] = !0) }, attributeRules: function (e) { var i, s, a = {}, n = t(e), r = e.getAttribute("type"); for (i in t.validator.methods) "required" === i ? ("" === (s = e.getAttribute(i)) && (s = !0), s = !!s) : s = n.attr(i), this.normalizeAttributeRule(a, r, i, s); return a.maxlength && /-1|2147483647|524288/.test(a.maxlength) && delete a.maxlength, a }, dataRules: function (e) { var i, s, a = {}, n = t(e), r = e.getAttribute("type"); for (i in t.validator.methods) s = n.data("rule" + i.charAt(0).toUpperCase() + i.substring(1).toLowerCase()), this.normalizeAttributeRule(a, r, i, s); return a }, staticRules: function (e) { var i = {}, s = t.data(e.form, "validator"); return s.settings.rules && (i = t.validator.normalizeRule(s.settings.rules[e.name]) || {}), i }, normalizeRules: function (e, i) { return t.each(e, function (s, a) { if (!1 !== a) { if (a.param || a.depends) { var n = !0; switch (typeof a.depends) { case "string": n = !!t(a.depends, i.form).length; break; case "function": n = a.depends.call(i, i) }n ? e[s] = void 0 === a.param || a.param : (t.data(i.form, "validator").resetElements(t(i)), delete e[s]) } } else delete e[s] }), t.each(e, function (s, a) { e[s] = t.isFunction(a) && "normalizer" !== s ? a(i) : a }), t.each(["minlength", "maxlength"], function () { e[this] && (e[this] = Number(e[this])) }), t.each(["rangelength", "range"], function () { var i; e[this] && (t.isArray(e[this]) ? e[this] = [Number(e[this][0]), Number(e[this][1])] : "string" == typeof e[this] && (i = e[this].replace(/[\[\]]/g, "").split(/[\s,]+/), e[this] = [Number(i[0]), Number(i[1])])) }), t.validator.autoCreateRanges && (null != e.min && null != e.max && (e.range = [e.min, e.max], delete e.min, delete e.max), null != e.minlength && null != e.maxlength && (e.rangelength = [e.minlength, e.maxlength], delete e.minlength, delete e.maxlength)), e }, normalizeRule: function (e) { if ("string" == typeof e) { var i = {}; t.each(e.split(/\s/), function () { i[this] = !0 }), e = i } return e }, addMethod: function (e, i, s) { t.validator.methods[e] = i, t.validator.messages[e] = void 0 !== s ? s : t.validator.messages[e], i.length < 3 && t.validator.addClassRules(e, t.validator.normalizeRule(e)) }, methods: { required: function (e, i, s) { if (!this.depend(s, i)) return "dependency-mismatch"; if ("select" === i.nodeName.toLowerCase()) { var a = t(i).val(); return a && a.length > 0 } return this.checkable(i) ? this.getLength(e, i) > 0 : e.length > 0 }, email: function (t, e) { return this.optional(e) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(t) }, url: function (t, e) { return this.optional(e) || /^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[\/?#]\S*)?$/i.test(t) }, date: function (t, e) { return this.optional(e) || !/Invalid|NaN/.test(new Date(t).toString()) }, dateISO: function (t, e) { return this.optional(e) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(t) }, number: function (t, e) { return this.optional(e) || /^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(t) }, digits: function (t, e) { return this.optional(e) || /^\d+$/.test(t) }, minlength: function (e, i, s) { var a = t.isArray(e) ? e.length : this.getLength(e, i); return this.optional(i) || a >= s }, maxlength: function (e, i, s) { var a = t.isArray(e) ? e.length : this.getLength(e, i); return this.optional(i) || a <= s }, rangelength: function (e, i, s) { var a = t.isArray(e) ? e.length : this.getLength(e, i); return this.optional(i) || a >= s[0] && a <= s[1] }, min: function (t, e, i) { return this.optional(e) || t >= i }, max: function (t, e, i) { return this.optional(e) || t <= i }, range: function (t, e, i) { return this.optional(e) || t >= i[0] && t <= i[1] }, step: function (e, i, s) { var a, n = t(i).attr("type"), r = "Step attribute on input type " + n + " is not supported.", o = new RegExp("\\b" + n + "\\b"), h = function (t) { var e = ("" + t).match(/(?:\.(\d+))?$/); return e && e[1] ? e[1].length : 0 }, l = function (t) { return Math.round(t * Math.pow(10, a)) }, c = !0; if (n && !o.test(["text", "number", "range"].join())) throw new Error(r); return a = h(s), (h(e) > a || l(e) % l(s) != 0) && (c = !1), this.optional(i) || c }, equalTo: function (e, i, s) { var a = t(s); return this.settings.onfocusout && a.not(".validate-equalTo-blur").length && a.addClass("validate-equalTo-blur").on("blur.validate-equalTo", function () { t(i).valid() }), e === a.val() }, remote: function (e, i, s, a) { if (this.optional(i)) return "dependency-mismatch"; a = "string" == typeof a && a || "remote"; var n, r, o, h = this.previousValue(i, a); return this.settings.messages[i.name] || (this.settings.messages[i.name] = {}), h.originalMessage = h.originalMessage || this.settings.messages[i.name][a], this.settings.messages[i.name][a] = h.message, s = "string" == typeof s && { url: s } || s, o = t.param(t.extend({ data: e }, s.data)), h.old === o ? h.valid : (h.old = o, n = this, this.startRequest(i), (r = {})[i.name] = e, t.ajax(t.extend(!0, { mode: "abort", port: "validate" + i.name, dataType: "json", data: r, context: n.currentForm, success: function (t) { var s, r, o, l = !0 === t || "true" === t; n.settings.messages[i.name][a] = h.originalMessage, l ? (o = n.formSubmitted, n.resetInternals(), n.toHide = n.errorsFor(i), n.formSubmitted = o, n.successList.push(i), n.invalid[i.name] = !1, n.showErrors()) : (s = {}, r = t || n.defaultMessage(i, { method: a, parameters: e }), s[i.name] = h.message = r, n.invalid[i.name] = !0, n.showErrors(s)), h.valid = l, n.stopRequest(i, l) } }, s)), "pending") } } }); var e, i = {}; return t.ajaxPrefilter ? t.ajaxPrefilter(function (t, e, s) { var a = t.port; "abort" === t.mode && (i[a] && i[a].abort(), i[a] = s) }) : (e = t.ajax, t.ajax = function (s) { var a = ("mode" in s ? s : t.ajaxSettings).mode, n = ("port" in s ? s : t.ajaxSettings).port; return "abort" === a ? (i[n] && i[n].abort(), i[n] = e.apply(this, arguments), i[n]) : e.apply(this, arguments) }), t }), jQuery.extend(jQuery.validator.messages, { required: "Ce champ est requis.", remote: "Veuillez remplir ce champ pour continuer.", email: "Veuillez entrer une adresse email valide.", url: "Veuillez entrer une URL valide.", date: "Veuillez entrer une date valide.", dateISO: "Veuillez entrer une date valide (ISO).", number: "Veuillez entrer un nombre valide.", digits: "Veuillez entrer (seulement) une valeur numÃ©rique.", creditcard: "Veuillez entrer un numÃ©ro de carte de crÃ©dit valide.", equalTo: "Veuillez entrer une nouvelle fois la mÃªme valeur.", accept: "Veuillez entrer une valeur avec une extension valide.", maxlength: jQuery.validator.format("Veuillez ne pas entrer plus de {0} caractÃ¨res."), minlength: jQuery.validator.format("Veuillez entrer au moins {0} caractÃ¨res."), rangelength: jQuery.validator.format("Veuillez entrer entre {0} et {1} caractÃ¨res."), range: jQuery.validator.format("Veuillez entrer une valeur entre {0} et {1}."), max: jQuery.validator.format("Veuillez entrer une valeur infÃ©rieure ou Ã©gale Ã  {0}."), min: jQuery.validator.format("Veuillez entrer une valeur supÃ©rieure ou Ã©gale Ã  {0}.") }), $(".datepicker").datepicker({ startDate: "0", autoclose: !0, beforeShowDay: function (t) { var e = new Date("2025-04-08"), i = new Date("2025-04-24"); return !(t > e && i > t) && 3 !== t.getDay() } }), $(".clockpicker").clockpicker({ placement: "bottom", align: "left", autoclose: !0, default: "now" }); var options = { rules: { name: { minlength: 2, maxlength: 50, required: !0 }, date: { date: !0, required: !0 }, email: { email: !0, required: !0 }, time: { required: !0 }, phone: { number: !0, required: !0 }, quantity: { number: !0, min: 1, max: 20, required: !0 } }, errorElement: "span", errorClass: "error text-danger", errorPlacement: function (t, e) { var i = $(e).attr("name"); t.appendTo($("#" + i + "_validate")) }, submitHandler: function (t, e) { e.preventDefault(), $("#submitButton").hide(), t.submit() } }; $("#reservation-form").validate(options);
